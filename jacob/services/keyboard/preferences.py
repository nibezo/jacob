import typing as t

import requests
from vkwave.bots import Keyboard

from database import utils as db
from services.keyboard import common

JSONStr = str


def preferences(admin_id: int) -> JSONStr:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫.

    Args:
        admin_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

    Returns:
        JSONStr: –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    kb = Keyboard()
    kb.add_text_button("üí¨ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —á–∞—Ç—ã", payload={"button": "configure_chats"})
    kb.add_row()
    if len(db.admin.get_admin_feud(admin_id)) > 1:
        kb.add_text_button("–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É", payload={"button": "select_group"})
        kb.add_row()
    kb.add_text_button("‚óÄÔ∏è –ù–∞–∑–∞–¥", payload={"button": "main_menu"})

    return kb.get_keyboard()


async def connected_chats(admin_id: int) -> JSONStr:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤.

    Args:
        admin_id: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        JSONStr: –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    kb = await common.list_of_chats(admin_id)
    if kb.buttons[-1]:
        kb.add_row()
    kb.add_text_button("‚ûï –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —á–∞—Ç", payload={"button": "reg_chat"})
    kb.add_row()
    kb.add_text_button("‚óÄÔ∏è –ù–∞–∑–∞–¥", payload={"button": "settings"})
    return kb.get_keyboard()


def configure_chat(chat_id: int):
    """
    –ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–∞.

    Args:
        chat_id: –ò–¥–µ–Ω—Ç—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞

    Returns:
        JSONStr: –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    kb = Keyboard()
    kb.add_text_button(
        "üóë –û—Ç–∫–ª—é—á–∏—Ç—å —á–∞—Ç",
        payload={"button": "remove_chat", "chat": chat_id},
    )
    kb.add_row()
    kb.add_text_button(
        "üóÇ –ò–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞—Ç—å —á–∞—Ç",
        payload={"button": "index_chat", "chat": chat_id},
    )
    kb.add_row()
    kb.add_text_button(
        "‚óÄÔ∏è –ù–∞–∑–∞–¥",
        payload={"button": "configure_chats"},
    )
    return kb.get_keyboard()


def index_chat(
    chat_id: int,
    vk_students: t.List[int],
    db_students: t.List[int],
) -> JSONStr:  # TODO: Refactor this shit!
    """
    –ú–µ–Ω—é –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ —á–∞—Ç–∞.

    Args:
        chat_id: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
        vk_students: –°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤ —á–∞—Ç–µ
        db_students: –°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤ –ë–î

    Returns:
        JSONStr: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    kb = Keyboard()
    if vk_students:
        query = requests.post(
            "https://dpaste.com/api/v2/",
            data={
                "content": ",".join(map(str, vk_students)),
                "syntax": {"text": "Plain " "text"},
            },
        )
        link = query.text.strip("\n")
        kb.add_text_button(
            "‚ûï –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤",
            payload={
                "button": "register_students",
                "chat_id": chat_id,
                "students": link,
            },
        )
        kb.add_row()
    if db_students:
        query = requests.post(
            "https://dpaste.com/api/v2/",
            data={
                "content": ",".join(map(str, db_students)),
                "syntax": {"text": "Plain text"},
            },
        )
        link = query.text.strip("\n")
        kb.add_text_button(
            "‚ûñ –£–¥–∞–ª–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤",
            payload={
                "button": "purge_students",
                "chat_id": chat_id,
                "students": link,
            },
        )
        kb.add_row()
    kb.add_text_button(
        "‚óÄÔ∏è –ù–∞–∑–∞–¥",
        payload={"button": "chat", "chat_id": chat_id},
    )
    return kb.get_keyboard()


def list_of_groups(admin_id: int) -> JSONStr:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≥—Ä—É–ø–ø–∞–º–∏, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è.

    Args:
        admin_id: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

    Returns:
        JSONStr: –°—Ç—Ä–æ–∫–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    """
    kb = Keyboard()

    groups = db.admin.get_admin_feud(admin_id)
    for group in groups:
        if len(kb.buttons[-1]) == 2:
            kb.add_row()
        kb.add_text_button(
            group.group_num,
            payload={"button": "group", "group_id": group.id},
        )

    return kb.get_keyboard()
